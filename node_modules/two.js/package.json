{
  "name": "two.js",
  "version": "0.5.0",
  "description": "A two-dimensional drawing api meant for modern browsers.",
  "keywords": [
    "dom",
    "w3c",
    "visualization",
    "svg",
    "animation",
    "canvas2d",
    "webgl",
    "rendering",
    "motiongraphics"
  ],
  "homepage": "http://jonobr1.github.io/two.js/",
  "author": {
    "name": "jonobr1",
    "url": "http://jonobr1.com/"
  },
  "main": "build/two.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonobr1/two.js.git"
  },
  "bugs": {
    "url": "https://github.com/jonobr1/two.js/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonobr1/two.js/blob/master/license.txt"
    }
  ],
  "dependencies": {
    "underscore": ">= 1.5.0",
    "backbone": ">= 1.1.2",
    "requestanimationframe": ">= 0.0.22"
  },
  "devDependencies": {
    "grunt": "^0.4.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-watch": "^0.6.0",
    "grunt-contrib-connect": "^0.8.0",
    "grunt-contrib-concat": "^0.4.0",
    "grunt-closure-tools": "^0.9.0",
    "grunt-contrib-uglify": "^0.4.0",
    "grunt-contrib-qunit": "^0.5.1"
  },
  "gitHead": "16947e844f023fe43c672a2adbeeeabf0a4af1ff",
  "readme": "<h1 id=\"masthead\" style=\"display: block; width: 285px; height: 80px; background: url(http://jonobr1.github.io/two.js/images/logo.gif) center center no-repeat; overflow: hidden; text-indent: -9999px;\">two.js</h1>\n\nA two-dimensional drawing api meant for modern browsers. It is renderer agnostic enabling the same api to render in multiple contexts: webgl, canvas2d, and svg.\n\n[Home](http://jonobr1.github.io/two.js) • [Examples](http://jonobr1.github.io/two.js/#examples) • [Documentation](http://jonobr1.github.io/two.js/#documentation) • [Help](https://github.com/jonobr1/two.js/issues?labels=question)\n\n## Usage\nDownload the [minified library](https://raw.github.com/jonobr1/two.js/master/build/two.min.js) and include it in your html.\n\n```html\n<script src=\"js/two.min.js\"></script>\n```\n\nIt can also be installed via `npm`\n\n```js\nnpm install --save two.js\n```\nAlternatively see [how to build the library yourself](https://github.com/jonobr1/two.js#custom-build).\n\n\nHere is boilerplate html in order to draw a spinning rectangle in two.js:\n\n```html\n<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <script src=\"js/two.min.js\"></script>\n  </head>\n  <body>\n    <script>\n      var two = new Two({\n        fullscreen: true,\n        autostart: true\n      }).appendTo(document.body);\n      var rect = two.makeRectangle(two.width / 2, two.height / 2, 50 ,50);\n      two.bind('update', function() {\n        rect.rotation += 0.001;\n      });\n    </script>\n  </body>\n</html>\n```\n\n## Custom Build\nTwo.js uses [nodejs](http://nodejs.org/) in order to build source files. You'll first want to install that.\nNext you'll want to install [grunt](https://npmjs.org/package/grunt):\n\n```\ncd two.js\nnpm install grunt\n```\nYou can edit the files that we be included in the build by modifying `./Gruntfile.js`.\nIf you're making an application and you're only using one renderer (i.e: svg context) then it is highly recommended to remove canvas and webgl renderers from your build in order to drastically decrease your file size.\n\nFinally, build the project:\n\n```\ngrunt\n```\n\nIf you are having problems running the closure compiler (it requires a JDK to be installed), run\n\n```\ngrunt build-uglify\n```\ninstead to minify the build with uglify.\n\n## Change Log\nFor the latest nightly changes checkout the `dev` branch [here](../../tree/dev).\n\n##### October 1, 2015 [v0.5.0](https://github.com/jonobr1/two.js/releases/tag/v0.5.0)\n+ Added support for `two.interpret` to import `svg`'s gradients\n+ Added `Two.Utils.xhr` and `two.load` methods to asynchronously load SVG files\n+ Added `Two.Gradient`, `Two.LinearGradient`, and `Two.RadialGradient`\n+ Added dependency check to ensure ASM loading in environments like NPM as well as in the browser\n+ Properly deleted `webgl` textures on removal of `Two.Path`\n+ Added support for `two.interpret` to import `svg`'s [Elliptical Arcs](http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands)\n+ Added `Two.ArcSegment` and `Two.SineRing` as new shapes invoked like `Two.Path` [@chrisdelbuck](http://github.com/chrisdelbuck)\n+ Added `Two.Line`, `Two.Rectangle`, `Two.RoundedRectangle`, `Two.Ellipse`, `Two.Polygon`, and `Two.Star` as new shapes invoked like `Two.Path`\n+ ___Breaking___: renamed `Two.Polygon` to `Two.Path`\n+ Performance enhancements to `webgl` renderer\n+ Performance enhancements to `canvas` renderer [Leo Koppelkamm](https://github.com/ponychicken)\n+ Enabled render ordering in `Two.Group.children` based on previous augmentation\n+ Augmented `Two.Group.children` to inherit from `Two.Collection` effectively making it an array instead of a map [Leo Koppelkamm](https://github.com/ponychicken)\n  - The map can still be accessed at `Two.Group.children.ids`\n\n##### July 22, 2014 [v0.4.0](https://github.com/jonobr1/two.js/releases/tag/v0.4.0)\n+ Updated `Two.interpret` to handle polybezier path data\n+ Added `Two.Group.mask` and `Two.Polygon.clip` in order to create clipping masks\n+ `Two.Group` has own `opacity` property [Leo Koppelkamm](https://github.com/ponychicken)\n+ Rendering optimizations [Leo Koppelkamm](https://github.com/ponychicken)\n+ `Two.noConflict` non-destructive command internally to the library\n+ `Two.interpret` decomposes `transform` attribute of source tag\n+ `Two.interpret` handles item irregularities from [Inkscape](http://www.inkscape.org/)\n+ Changed `Two.Identifier` to use underscores instead of hyphens for dot-notation access [Leo Koppelkamm](https://github.com/ponychicken)\n+ Added `Two.Group.getById` and `Two.Group.getByClassName` methods for convenient selection [Leo Koppelkamm](https://github.com/ponychicken)\n+ Added `classList` to all `Two.Shape`s [Leo Koppelkamm](https://github.com/ponychicken)\n+ Enabled inference of applied styles on imported svgs [Leo Koppelkamm](https://github.com/ponychicken)\n+ Added `Two.Polygon.getPointAt` method to get coordinates on a curve/line\n+ Added `Two.Polygon.length` property and `Two.Polygon._updateLength` method to calculate length of curve/line\n+ Updated `Two.Group.prototype` observable properties on `Two.Polygon.Properties` to ensure each property is considered unique\n+ ~~`Two.Polygon.vertices` first and last vertex create automated control points when `Two.Polygon.curved = true`~~\n+ Updated `Two.Polygon.subdivide` method to accommodate `Two.makeEllipse`\n+ Enabled `id` to be properly interpreted from SVG elements [@chrisdelbuck](http://github.com/chrisdelbuck)\n+ Updated `webgl` renderer `getBoundingClientRect` to accommodate `relative` anchors\n+ Updated `beginning` and `ending` to clamp to each other\n+ Reorganized `Two.Polygon._update` and `Two.Polygon.plot` in order to handle `beginning` and `ending` properties\n+ Updated `Two.getComputedMatrix` and `Two.Polygon.getBoundingClientRect` to adhere to nested transformations\n+ Updated `Two.Anchor` to change `control` points relatively by default through `anchor.relative` property\n+ Updated `Two.Polygon.subdivide` method to accommodate `curved = false` circumstances\n+ Updated `svg`, `canvas`, and `webgl` renderers to properly reflect holes in curved `Two.Polygon`s\n+ Updated `Two.Group` `clone` method\n+ Added `toObject` method to `Two.Group`, `Two.Polygon`, `Two.Anchor`\n+ `Two.Polygon` initializes `polygon.cap = 'butt'` and `polygon.join = 'miter'` based on Adobe Illustrator defaults\n+ `Two.Polygon.subdivide` method now works with `Two.Commands.move` for noncontiguous polygons\n+ Internally update matrices on `getBoundingClientRect` in order to remove the need to defer or wait for internal variables to be up-to-date\n+ Refactor of renderers and scenegraph for performance optimization and lower memory footprint\n  - Relinquished internal _events_ for _flags_\n  - Prototypical declaration of `Object.defineProperty`\n  - Added `_update` and `flagReset` methods to `Two.Shape`, `Two.Group`, and `Two.Polygon`\n  - Decoupled `canvas` and `webgl` renderers and are now independent\n  - Added `_matrix.manual` to override the default behavior of a `Two.Polygon` transformation\n  - Localized variables per file as much as possible to reduce Garbage Collection on runtime\n\n##### October 25, 2013 [v0.3.0](https://github.com/jonobr1/two.js/tree/v0.3.0)\n+ Can properly pass `domElement` on construction of new instance of two\n+ Added `overdraw` boolean to `webgl` renderer [@arodic](https://github.com/arodic)\n+ Added support for ie9 svg interpretation [@tomconroy](https://github.com/tomconroy)\n+ Added `subdivide` method for `Two.Polygon` and `Two.Group`\n+ Ensure sure that `manual` properly is set on construction of `Two.Polygon` that it binds `Two.Anchor.controls` change events\n+ Added automatic High DPI support for `webgl` renderer\n+ Updated `two.interpret(svg)` to handle compound paths\n+ Added [`Two.Anchor`](http://jonobr1.github.io/two.js/#two-anchor) which represents all anchor points drawn in two.js\n+ Modified source to not have any instances of `window` for node use\n+ Updated to underscore.js 1.5.1\n+ Added `Two.Utils.getReflection` method to properly get reflection's in svg interpretation\n+ Made `Two.Vector` inherently not broadcast events and now needs to be explicity bound to in order to broadcast events, which two.js does internally for you\n+ Created `Two.Utils.Collection` an observable array-like class that `polygon.vertices` inherit [@fchasen](http://github.com/fchasen)\n+ Added `Two.Events.insert` and `Two.Events.remove` for use with `Two.Utils.Collection`\n+ Properly recurses `getBoundingClientRect` for both `Two.Group` and `Two.Polygon`\n+ Added `Two.Version` to clarify forthcoming builds\n+ Updated hierarchy ordering of `group.children` in `canvas` and `webgl` renderers\n+ Updated shallow and bidirectional `remove` method for `Two.Group` and `Two.Polygon`\n+ Added `corner` method to `Two.Group` and `Two.Polygon` allowing anchoring along the upper lefthand corner of the form\n+ Modified `center` method of `Two.Group` and `Two.Polygon` to not affect the `translation` property to stay inline with `corner` method and any future orientation and anchoring logic\n+ Added automatic High DPI support for `canvas` renderer\n+ Added `overdraw` boolean to `canvas` renderer\n+ Added AMD loader compatibility [@thomasrudin](http://github.com/thomasrudin)\n+ Deferred `two.update();` to account for canvas and webgl\n+ Added `remove` and `clear` methods to `two` instance\n+ Updated svg interpretation for `webgl` context\n+ ~~Added matrix property to all `Two.Shape`'s for advanced transformations~~\n+ Added `inverse` method to `Two.Matrix`\n+ Remove execution path dependency on utils/build.js [@masonblier](https://github.com/masonblier)\n+ Added `timeDelta` property to every `two` instance\n+ Added gruntfile, package.json for more integration with `npm`, and dependency free build (`build/two.clean.js`) [@iros](https://github.com/iros)\n+ Crossbrowser compatibility with `noStroke` and `noFill` commands\n\n##### May 3, 2013 [v0.2.0](https://github.com/jonobr1/two.js/tree/v0.2.0)\n+ First alpha release\n\n##### Jan 29, 2013 [v0.1.0-alpha](https://github.com/jonobr1/two.js/tree/v0.1.0-alpha)\n+ Proof of Concept built from Three.js\n",
  "readmeFilename": "README.md",
  "_id": "two.js@0.5.0",
  "_shasum": "a66e2bb2465d63c7c8247c60494f72775d093d1c",
  "_from": "git+https://github.com/jonobr1/two.js.git",
  "_resolved": "git+https://github.com/jonobr1/two.js.git#16947e844f023fe43c672a2adbeeeabf0a4af1ff"
}
